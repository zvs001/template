// SASS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home
//   width: $icon-home-width
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites
$s-sect-clients-name: 's-sect-clients'
$s-sect-clients-x: 0px
$s-sect-clients-y: 0px
$s-sect-clients-offset-x: 0px
$s-sect-clients-offset-y: 0px
$s-sect-clients-width: 240px
$s-sect-clients-height: 172px
$s-sect-clients-total-width: 713px
$s-sect-clients-total-height: 345px
$s-sect-clients-image: '../images/sprites/service-group.png'
$s-sect-clients: (0px, 0px, 0px, 0px, 240px, 172px, 713px, 345px, '../images/sprites/service-group.png', 's-sect-clients', )
$s-sect-cons-name: 's-sect-cons'
$s-sect-cons-x: 240px
$s-sect-cons-y: 172px
$s-sect-cons-offset-x: -240px
$s-sect-cons-offset-y: -172px
$s-sect-cons-width: 237px
$s-sect-cons-height: 171px
$s-sect-cons-total-width: 713px
$s-sect-cons-total-height: 345px
$s-sect-cons-image: '../images/sprites/service-group.png'
$s-sect-cons: (240px, 172px, -240px, -172px, 237px, 171px, 713px, 345px, '../images/sprites/service-group.png', 's-sect-cons', )
$s-sect-pops-name: 's-sect-pops'
$s-sect-pops-x: 0px
$s-sect-pops-y: 172px
$s-sect-pops-offset-x: 0px
$s-sect-pops-offset-y: -172px
$s-sect-pops-width: 238px
$s-sect-pops-height: 173px
$s-sect-pops-total-width: 713px
$s-sect-pops-total-height: 345px
$s-sect-pops-image: '../images/sprites/service-group.png'
$s-sect-pops: (0px, 172px, 0px, -172px, 238px, 173px, 713px, 345px, '../images/sprites/service-group.png', 's-sect-pops', )
$s-sect-pr-name: 's-sect-pr'
$s-sect-pr-x: 478px
$s-sect-pr-y: 0px
$s-sect-pr-offset-x: -478px
$s-sect-pr-offset-y: 0px
$s-sect-pr-width: 235px
$s-sect-pr-height: 170px
$s-sect-pr-total-width: 713px
$s-sect-pr-total-height: 345px
$s-sect-pr-image: '../images/sprites/service-group.png'
$s-sect-pr: (478px, 0px, -478px, 0px, 235px, 170px, 713px, 345px, '../images/sprites/service-group.png', 's-sect-pr', )
$s-sect-web-name: 's-sect-web'
$s-sect-web-x: 240px
$s-sect-web-y: 0px
$s-sect-web-offset-x: -240px
$s-sect-web-offset-y: 0px
$s-sect-web-width: 238px
$s-sect-web-height: 172px
$s-sect-web-total-width: 713px
$s-sect-web-total-height: 345px
$s-sect-web-image: '../images/sprites/service-group.png'
$s-sect-web: (240px, 0px, -240px, 0px, 238px, 172px, 713px, 345px, '../images/sprites/service-group.png', 's-sect-web', )
$spritesheet-width: 713px
$spritesheet-height: 345px
$spritesheet-image: '../images/sprites/service-group.png'
$spritesheet-sprites: ($s-sect-clients, $s-sect-cons, $s-sect-pops, $s-sect-pr, $s-sect-web, )
$spritesheet: (713px, 345px, '../images/sprites/service-group.png', $spritesheet-sprites, )

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home
//   @include sprite-width($icon-home)
//
// .icon-email
//   @include sprite($icon-email)
//
// Example usage in HTML:
//   `display: block` sprite:
//   <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//   // CSS
//   .icon {
//     display: inline-block;
//   }
//
//   // HTML
//   <i class="icon icon-home"></i>
@mixin sprite-width($sprite)
  width: nth($sprite, 5)

@mixin sprite-height($sprite)
  height: nth($sprite, 6)

@mixin sprite-position($sprite)
  $sprite-offset-x: nth($sprite, 3)
  $sprite-offset-y: nth($sprite, 4)
  background-position: $sprite-offset-x  $sprite-offset-y

@mixin sprite-image($sprite)
  $sprite-image: nth($sprite, 9)
  background-image: url(#{$sprite-image})

@mixin sprite($sprite)
  @include sprite-image($sprite)
  @include sprite-position($sprite)
  @include sprite-width($sprite)
  @include sprite-height($sprite)

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SASS
//
// @include sprites($spritesheet-sprites)
@mixin sprites($sprites)
  @each $sprite in $sprites
    $sprite-name: nth($sprite, 10)
    .#{$sprite-name}
      @include sprite($sprite)
